flux:
  server: true
  port: 1099
  security: true
  user: admin
  password: admin

  dbConfig:
    databaseType: H2
    maxConnections: 15
    concurrencyLevel: 10
    #driver:
    #url:
    #jdbcUser:
    #jdbcPassword:

# HTTP-specific options.
http:

  # The port on which the HTTP server listens for service requests.
  port: 8080

  # The port on which the HTTP server listens for administrative requests.
  adminPort: 8081

  # Maximum number of threads.
  maxThreads: 100

  # Minimum number of thread to keep alive.
  minThreads: 10

  # The type of connector to use. Other valid values are "nonblocking" or "legacy". In general, the
  # blocking connector should be used for low-latency services with short request durations. The
  # nonblocking connector should be used for services with long request durations or which
  # specifically take advantage of Jetty's continuation support.
  # If you need SSL support, you can either choose from "nonblocking+ssl" or "legacy+ssl".
  connectorType: blocking

  # The maximum amount of time a connection is allowed to be idle before being closed.
  maxIdleTime: 1s

  # The number of threads dedicated to accepting connections. If omitted, this defaults to the
  # number of logical CPUs on the current machine.
  acceptorThreadCount: 3

  # The offset of the acceptor threads' priorities. Can be [-5...5], with -5 dropping the acceptor
  # threads to the lowest possible priority and with 5 raising them to the highest priority.
  acceptorThreadPriorityOffset: 0

  # The number of unaccepted requests to keep in the accept queue before refusing connections. If
  # set to -1 or omitted, the system default is used.
  acceptQueueSize: 100

  # The maximum number of buffers to keep in memory.
  maxBufferCount: 1024

  # The initial buffer size for reading requests.
  requestBufferSize: 32KB

  # The initial buffer size for reading request headers.
  requestHeaderBufferSize: 6KB

  # The initial buffer size for writing responses.
  responseBufferSize: 32KB

  # The initial buffer size for writing response headers.
  responseHeaderBufferSize: 6KB

  # Enables SO_REUSEADDR on the server socket.
  reuseAddress: true

  # Enables SO_LINGER on the server socket with the specified linger time.
  soLingerTime: 1s

  # The number of open connections at which the server transitions to a "low-resources" mode.
  lowResourcesConnectionThreshold: 25000

  # When in low-resources mode, the maximum amount of time a connection is allowed to be idle before
  # being closed. Overrides maxIdleTime.
  lowResourcesMaxIdleTime: 5s

  # If non-zero, the server will allow worker threads to finish processing requests after the server
  # socket has been closed for the given amount of time.
  shutdownGracePeriod: 2s

  # If true, the HTTP server will prefer X-Forwarded headers over their non-forwarded equivalents.
  useForwardedHeaders: true

  # If true, forces the HTTP connector to use off-heap, direct buffers.
  useDirectBuffers: true

  # The hostname of the interface to which the HTTP server socket wil be found. If omitted, the
  # socket will listen on all interfaces.
  # bindHost: app1.example.com

  # HTTP request log settings
  requestLog:
    # Settings for logging to stdout.
    console:
      # If true, write log statements to stdout.
      enabled: true

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG

  # Settings for logging to stdout.
  console:

    # If true, write log statements to stdout.
    enabled: true

    # Do not display log statements below this threshold to stdout.
    threshold: ALL
